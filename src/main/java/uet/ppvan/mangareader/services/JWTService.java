package uet.ppvan.mangareader.services;


import io.jsonwebtoken.ExpiredJwtException;
import io.jsonwebtoken.MalformedJwtException;

import java.time.Duration;

public interface JWTService {
    String generateJWT(Object obj);

    /**
     * Generate a JWT string from object.
     * The Object is serialized to JSON then written to JWT as Subject.
     *
     * @param obj         The object to generate JWT
     * @param expiredTime Expired time
     * @return JWT have JSON string as Subject claims
     */
    String generateJWT(Object obj, Duration expiredTime);

    /**
     * Deserialize Object from JWT
     *
     * @param type The class type
     * @param jwt  JWT string generated by {@link #generateJWT(Object, Duration)}
     * @param <T>  Object class to map using Jackson
     * @return The object with safe-type T
     * @throws ExpiredJwtException   if JWT is expired
     * @throws MalformedJwtException if JWT is not valid
     */
    <T> T parseJWT(Class<T> type, String jwt);
}
